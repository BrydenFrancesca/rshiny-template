# box:
#     id: quay.io/mojanalytics/analytics-ci
#     tag: latest
#     registry: quay.io

# pre-build:
#   steps:
#     - script:
#       name: create or update ECR Docker repository
#       code: |
#         aws configure set default.region ${AWS_REGION}
#         if ! aws ecr describe-repositories --repository-names ${WERCKER_GIT_REPOSITORY} > /dev/null 2>&1; then aws ecr create-repository --repository-name ${WERCKER_GIT_REPOSITORY}; fi

# build:
#   box:
#     id: rocker/shiny
#     tag: latest
#   steps:
#     - script:
#       name: copy application to webroot
#       code: |
#         rm -rf /srv/shiny-server/*
#         cp -R * /srv/shiny-server/

#     - script:
#       name: export image tag
#       code: export DOCKER_TAG=$(echo $WERCKER_GIT_COMMIT | tr -c1-8)

#     - internal/docker-push:
#       aws-access-key: $AWS_ACCESS_KEY_ID
#       aws-secret-key: $AWS_SECRET_ACCESS_KEY
#       aws-region: $AWS_REGION
#       aws-registry-id: $AWS_REGISTRY_ID
#       repository: $WERCKER_GIT_REPOSITORY
#       tag: $DOCKER_TAG

# deploy:
#   steps:
#     - script:
#       name: create kubeconfig file
#       code: |
#         mkdir ~/.kube
#         cat <<EOF > ~/.kube/config
#         apiVersion: v1
#         clusters:
#         - cluster:
#             certificate-authority-data: ${K8S_CA_DATA}
#             server: ${K8S_SERVER}
#           name: ${K8S_NAME}
#         contexts:
#         - context:
#             cluster: ${K8S_NAME}
#             user: ${K8S_NAME}
#           name: ${K8S_NAME}
#         current-context: ${K8S_NAME}
#         kind: Config
#         preferences: {}
#         users:
#         - name: ${K8S_NAME}
#           user:
#             client-certificate-data: ${K8S_CLIENT_CERT}
#             client-key-data: ${K8S_CLIENT_KEY}
#             password: ${K8S_PASSWORD}
#             username: ${K8S_USERNAME}
#         EOF

#     - script:
#       name: get pods
#       code: kubectl get pods --all-namespaces
